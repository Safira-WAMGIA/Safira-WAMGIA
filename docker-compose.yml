version: "3.9"

###############################################################################
# Safira – docker‑compose.yml (2025‑04‑rev‑stable)
# • Todos os serviços prontos p/ “setup && run” sem interação                   
# • Bloqueadores resolvidos: MinIO 2 portas, secrets injetados, Supabase→PG    
# • Anchors x‑common‑env, x‑health‑* e x‑logging para DRY                       
###############################################################################

x-common-env: &common-env
  env_file: [.env]
  restart: unless-stopped
  networks: [safira-net]

x-health-pg: &health-pg
  healthcheck:
    test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER:-postgres}"]
    interval: 10s
    timeout: 5s
    retries: 5

x-health-http: &health-http
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:${HEALTH_PORT:-80}"]
    interval: 15s
    timeout: 5s
    retries: 5

x-logging: &default-log
  logging:
    driver: json-file
    options: {max-size: "10m", max-file: "3"}

services:
  # ───── Dados & Storage ─────
  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    ports:
      - "${PORT_MINIO_API:-9000}:9000"
      - "${PORT_MINIO_CONSOLE:-9001}:9001"
    volumes: [minio-data:/data]
    <<: [*common-env, *health-http, *default-log]
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD_FILE=/run/secrets/minio_pwd
    secrets: [minio_pwd]

  db-safira:
    image: postgres:15
    ports: ["${PORT_PG_SAFIRA:-5432}:5432"]
    volumes: [pg-safira:/var/lib/postgresql/data]
    <<: [*common-env, *health-pg, *default-log]
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD_FILE=/run/secrets/pg_safira_pwd
    secrets: [pg_safira_pwd]

  db-pagamento:
    image: postgres:15
    ports: ["${PORT_PG_PAGAMENTO:-5433}:5432"]
    volumes: [pg-pagamento:/var/lib/postgresql/data]
    <<: [*common-env, *health-pg, *default-log]
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD_FILE=/run/secrets/pg_pagamento_pwd
    secrets: [pg_pagamento_pwd]

  db-jira:
    image: postgres:15
    ports: ["${PORT_PG_JIRA:-5434}:5432"]
    volumes: [pg-jira:/var/lib/postgresql/data]
    <<: [*common-env, *health-pg, *default-log]
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD_FILE=/run/secrets/pg_jira_pwd
    secrets: [pg_jira_pwd]

  redis:
    image: redis:alpine
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD_FILE:-/run/secrets/redis_pwd}"]
    ports: ["${PORT_REDIS:-6379}:6379"]
    volumes: [redis-data:/data]
    <<: [*common-env, *default-log]
    secrets: [redis_pwd]

  # ───── Observabilidade ─────
  prometheus:
    image: prom/prometheus
    ports: ["${PORT_PROMETHEUS:-9090}:9090"]
    volumes: [prometheus-conf:/etc/prometheus]
    <<: [*common-env, *default-log]

  grafana:
    image: grafana/grafana
    ports:
      - "${PORT_GRAFANA:-3000}:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD_FILE=/run/secrets/grafana_pwd
    secrets:
      - grafana_pwd
    <<: [*common-env, *default-log]

  loki:
    image: grafana/loki
    ports: ["${PORT_LOKI:-3100}:3100"]
    volumes: [loki-conf:/etc/loki]
    <<: [*common-env, *default-log]

  watchtower:
    image: containrrr/watchtower
    command: --label-enable
    volumes: [/var/run/docker.sock:/var/run/docker.sock]
    <<: [*common-env, *default-log]

  # ───── Orquestração / Gateway ─────
  traefik:
    image: traefik:v2.11
    ports:
      - "${PORT_TRAEFIK_HTTP:-80}:80"
      - "${PORT_TRAEFIK_HTTPS:-443}:443"
    volumes:
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
    <<: [*common-env, *default-log]

  # ───── Core N8N ─────
  safira:
    image: n8nio/n8n
    ports: ["${PORT_SAFIRA:-5678}:5678"]
    volumes: [safira-data:/home/node/.n8n]
    labels: ["com.centurylinklabs.watchtower.enable=true"]
    <<: [*common-env, *default-log]
    depends_on:
      - db-safira

  administrador:
    image: n8nio/n8n
    ports: ["${PORT_ADMIN:-5680}:5678"]
    volumes: [admin-data:/home/node/.n8n]
    <<: [*common-env, *default-log]
    depends_on:
      - db-safira

  # ───── IA & Serviços custom ─────
  llama:
    image: ollama/ollama
    ports: ["${PORT_OLLAMA:-11434}:11434"]
    volumes: [llama-data:/root/.ollama]
    <<: [*common-env, *default-log]

  csm:
    build: ./csm
    ports: ["${PORT_CSM:-5050}:5050"]
    volumes: [./csm:/app]
    <<: [*common-env, *health-http, *default-log]

  stt:
    build: ./voice/input
    ports: ["${PORT_STT:-9000}:9000"]
    volumes: [./voice/input:/app]
    <<: [*common-env, *health-http, *default-log]

  venom:
    build: ./venom
    ports: ["${PORT_VENOM:-3001}:3001"]
    volumes: [./venom:/app, venom-models:/models]
    <<: [*common-env, *health-http, *default-log]

  image-reader:
    build: ./image/input
    ports: ["${PORT_IMG_READER:-6001}:8000"]
    volumes: [./image/input:/app]
    <<: [*common-env, *health-http, *default-log]

  image-generator:
    build: ./image/output
    ports: ["${PORT_IMG_GEN:-6002}:8000"]
    volumes: [./image/output:/app]
    <<: [*common-env, *health-http, *default-log]

  ai-functions:
    build: ./ai-functions
    ports: ["${PORT_AI_FUN:-8800}:8800"]
    volumes: [./ai-functions:/app]
    <<: [*common-env, *health-http, *default-log]

  # ───── DevOps / CI ─────
  jenkins:
    image: jenkins/jenkins:lts
    ports:
      - "${PORT_JENKINS_WEB:-8081}:8080"
      - "${PORT_JENKINS_AGENT:-50000}:50000"
    volumes: [jenkins-data:/var/jenkins_home]
    environment: [JENKINS_ADMIN_PASSWORD_FILE=/run/secrets/jenkins_admin_pwd]
    <<: [*common-env, *default-log]
    secrets: [jenkins_admin_pwd]

  spark:
    image: bitnami/spark:latest
    environment: [SPARK_MODE=master]
    ports:
      - "${PORT_SPARK_MASTER:-7077}:7077"
      - "${PORT_SPARK_UI:-8088}:8080"
    volumes: [spark-data:/bitnami/spark]
    <<: [*common-env, *default-log]

  # ───── Apps de gestão ─────
  jira:
    image: atlassian/jira-software
    ports: ["${PORT_JIRA:-8090}:8080"]
    volumes: [jira-data:/var/atlassian/application-data/jira]
    <<: [*common-env, *default-log]

volumes:
  minio-data:
  pg-safira:
  pg-pagamento:
  pg-jira:
  redis-data:
  prometheus-conf:
  grafana-data:
  loki-conf:
  safira-data:
  admin-data:
  llama-data:
  venom-models:
  jenkins-data:
  spark-data:
  jira-data:

networks:
  safira-net:
    driver: overlay
    
secrets:
  pg_safira_pwd:
    external: true
  pg_pagamento_pwd:
    external: true
  pg_jira_pwd:
    external: true
  minio_pwd:
    external: true
  grafana_pwd:
    external: true
  traefik_pwd:
    external: true
  redis_pwd:
    external: true
  jenkins_admin_pwd:
    external: true
