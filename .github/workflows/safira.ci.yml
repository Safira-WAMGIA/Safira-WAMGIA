name: Safira CI/CD

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          pip install -U pip
          [ -f requirements.txt ] && pip install -r requirements.txt || echo "requirements.txt não encontrado, prosseguindo..."
          pip install pytest ruff coverage

      - name: Ruff (linter/formatter)
        run: ruff check .

      - name: Pytest (skip if no tests)
        run: |
          pytest -q --cov=. --cov-report=xml
          RET=$?
          if [ $RET -eq 5 ]; then
            echo "⚠️ Nenhum teste encontrado. Pulando pytest."
            exit 0
          else
            exit $RET
          fi

      - name: Upload coverage report
        uses: actions/upload-artifact@v4.6.2
        with:
          name: coverage-report-${{ github.sha }}
          path: coverage.xml

  build-push:
    needs: lint-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU (cross‑compile)
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push safira stack
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:build-${{ github.run_number }}

      - name: Export resolved compose (debug)
        run: docker compose config > compose-resolved-${{ github.sha }}.yml

      - uses: actions/upload-artifact@v4.6.2
        with:
          name: compose-resolved-${{ github.sha }}
          path: compose-resolved-${{ github.sha }}.yml